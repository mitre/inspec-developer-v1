(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{449:function(e,t,s){"use strict";s.r(t);var a=s(65),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"_3-studying-an-inspec-profile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-studying-an-inspec-profile"}},[e._v("#")]),e._v(" 3. Studying an InSpec profile")]),e._v(" "),s("p",[e._v("Let's start by creating a profile that will contain NGINX tests.")]),e._v(" "),s("p",[e._v("At your terminal, type:")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("inspec init profile my_nginx\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("The terminal output should look like the following:")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("Create new profile at /root/my_nginx\n * Create directory controls\n * Create "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v(" controls/example.rb\n * Create "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v(" inspec.yml\n * Create directory libraries\n * Create "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v(" README.md\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("h3",{attrs:{id:"_3-1-understanding-the-profile-structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-understanding-the-profile-structure"}},[e._v("#")]),e._v(" 3.1. Understanding the profile structure")]),e._v(" "),s("p",[e._v("Let's take a look at how the profile is structured. We'll start with how a profile's files are structured and then move to what makes up an InSpec control.")]),e._v(" "),s("p",[e._v("First, run "),s("code",[e._v("tree")]),e._v(" to see what's in the "),s("code",[e._v("my_nginx")]),e._v(" profile.")]),e._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v("tree my_nginx\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("Which should look like:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("      my_nginx\n      ├── README.md\n      ├── controls\n      │   └── example.rb\n      └── inspec.yml\n\n      1 directory, 3 files\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("p",[e._v("Here's the role of each component.")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("README.md")]),e._v(" provides documentation about the profile, including what it covers and how to run it.")]),e._v(" "),s("li",[e._v("The "),s("code",[e._v("controls")]),e._v(" directory contains files which implement the InSpec tests.")]),e._v(" "),s("li",[s("code",[e._v("inspec.yml")]),e._v(" provides metadata, or information, about the profile. Metadata includes the profile's description, author, copyright, and version.")]),e._v(" "),s("li",[e._v("The "),s("code",[e._v("libraries")]),e._v(" directory contains resource extensions. A resource extension enables you to "),s("a",{attrs:{href:"https://www.inspec.io/docs/reference/dsl_resource/",target:"_blank",rel:"noopener noreferrer"}},[e._v("define your own resource types"),s("OutboundLink")],1),e._v(". You won't work with resource extensions in this module.")])]),e._v(" "),s("h3",{attrs:{id:"_3-2-understand-a-control-s-structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-understand-a-control-s-structure"}},[e._v("#")]),e._v(" 3.2. Understand a control's structure")]),e._v(" "),s("p",[e._v("Let's take a look at the default control file, "),s("code",[e._v("controls/example.rb")]),e._v(".")]),e._v(" "),s("div",{staticClass:"language-ruby line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[e._v("title "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'sample section'")])]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# you can also use plain tests")]),e._v("\ndescribe file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/tmp'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("\n  it "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" should be_directory "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("end")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# you add controls here")]),e._v("\ncontrol "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'tmp-1.0'")])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# A unique ID for this control")]),e._v("\n  impact "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.7")]),e._v("                                "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The criticality, if this control fails.")]),e._v("\n  title "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Create /tmp directory'")])]),e._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# A human-readable title")]),e._v("\n  desc "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'An optional description...'")])]),e._v("\n  describe file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/tmp'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The actual test")]),e._v("\n    it "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" should be_directory "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("end")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("end")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br")])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("Tip for developing profiles")]),e._v(" "),s("p",[e._v("When creating new profiles use the existing example file as a template")])]),e._v(" "),s("p",[e._v("This example shows two tests. Both tests check for the existence of the "),s("code",[e._v("/tmp")]),e._v(" directory. The second test provides additional information about the test. Let's break down each component.")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("control")]),e._v(" (line 12) is followed by the control's name. Each control in a profile has a unique name.")]),e._v(" "),s("li",[s("code",[e._v("impact")]),e._v(" (line 13) measures the relative importance of the test and must be a value between 0.0 and 1.0.")]),e._v(" "),s("li",[s("code",[e._v("title")]),e._v(" (line 14) defines the control's purpose.")]),e._v(" "),s("li",[s("code",[e._v("desc")]),e._v(" (line 15) provides a more complete description of what the control checks for.")]),e._v(" "),s("li",[s("code",[e._v("describe")]),e._v(" (lines 16 — 18) defines the test. Here, the test checks for the existence of the "),s("code",[e._v("/tmp")]),e._v(" directory.")])]),e._v(" "),s("p",[e._v("In Ruby, the "),s("code",[e._v("do")]),e._v(" and "),s("code",[e._v("end")]),e._v(" keywords define a "),s("code",[e._v("block")]),e._v(". An InSpec control always contains at least one "),s("code",[e._v("describe")]),e._v(" block. However, a control can contain many "),s("code",[e._v("describe")]),e._v(" blocks.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("More information on a block")]),e._v(" "),s("p",[s("a",{attrs:{href:"http://ruby-for-beginners.rubymonstas.org/blocks.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("block"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"_3-3-understand-a-describe-block-s-structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-understand-a-describe-block-s-structure"}},[e._v("#")]),e._v(" 3.3. Understand a describe block's structure")]),e._v(" "),s("p",[e._v("As with many test frameworks, InSpec code resembles natural language. Here's the format of a describe block.")]),e._v(" "),s("div",{staticClass:"language-ruby line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[e._v("describe "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("entity"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("\n  it "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("expectation"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("end")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("An InSpec test has two main components: the subject to examine and the subject's expected state. Here, "),s("code",[e._v("<entity>")]),e._v(" is the subject you want to examine, for example, a package name, service, file, or network port. The "),s("code",[e._v("<expectation>")]),e._v(" part specifies the desired result or expected state, for example, that a port should be open (or perhaps should not be open.)")]),e._v(" "),s("p",[e._v("Let's take a closer look at the "),s("code",[e._v("describe")]),e._v(" block in the example.")]),e._v(" "),s("div",{staticClass:"language-ruby line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[e._v("describe file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/tmp'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("\n  it "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" should be_directory "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("end")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v('Because InSpec resembles human-readable language, you might read this test as "/tmp should be a directory." Let\'s break down each component.')]),e._v(" "),s("hr"),e._v(" "),s("h4",{attrs:{id:"_3-3-1-file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-file"}},[e._v("#")]),e._v(" 3.3.1. file")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://www.inspec.io/docs/reference/resources/file/",target:"_blank",rel:"noopener noreferrer"}},[e._v("file"),s("OutboundLink")],1),e._v(" is an InSpec "),s("a",{attrs:{href:"https://www.inspec.io/docs/reference/resources/",target:"_blank",rel:"noopener noreferrer"}},[e._v("resource"),s("OutboundLink")],1),e._v(". If you're familiar with Chef, you know that a resource configures one part of the system. InSpec resources are similar. For example, the InSpec file resource tests for file attributes, including a file's owner, mode, and permissions. The example examines the /tmp directory.")]),e._v(" "),s("hr"),e._v(" "),s("h4",{attrs:{id:"_3-3-2-it"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-it"}},[e._v("#")]),e._v(" 3.3.2. it")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("it")]),e._v(" statement validates one of your resource's features. A "),s("code",[e._v("describe")]),e._v(" block contains one or more "),s("code",[e._v("it")]),e._v(" statements. "),s("code",[e._v("it")]),e._v(" enables you to test the resource itself. You'll also see "),s("code",[e._v("its")]),e._v(", which describes some feature of the resource, such as its mode or owner. You'll see examples of both "),s("code",[e._v("it")]),e._v(" and "),s("code",[e._v("its")]),e._v(" shortly.")]),e._v(" "),s("hr"),e._v(" "),s("h4",{attrs:{id:"_3-3-3-should"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-3-should"}},[e._v("#")]),e._v(" 3.3.3. should")]),e._v(" "),s("p",[s("code",[e._v("should")]),e._v(" describes the expectation. "),s("code",[e._v("should")]),e._v(" asserts that the condition that follows "),s("em",[e._v("should")]),e._v(" be true. Alternatively, "),s("code",[e._v("should_not")]),e._v(" asserts that the condition that follows "),s("em",[e._v("should not")]),e._v(" be true. You'll see examples of both shortly.")]),e._v(" "),s("hr"),e._v(" "),s("h4",{attrs:{id:"_3-3-4-be-directory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-4-be-directory"}},[e._v("#")]),e._v(" 3.3.4. be_directory")]),e._v(" "),s("p",[s("code",[e._v("be_directory")]),e._v(" is an example of a "),s("a",{attrs:{href:"https://www.inspec.io/docs/reference/matchers/",target:"_blank",rel:"noopener noreferrer"}},[e._v("matcher"),s("OutboundLink")],1),e._v(". A matcher compares a resource's actual value to its expected value. InSpec provides several predefined matchers. The "),s("code",[e._v("file")]),e._v(" resource provides the "),s("code",[e._v("be_directory")]),e._v(" matcher.")])])}),[],!1,null,null,null);t.default=r.exports}}]);